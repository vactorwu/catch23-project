//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 
namespace WebService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Trade.BusinessServiceImplementation.TradeServiceAsmx", Namespace="http://tempuri.org/")]
    public partial class TradeServiceAsmx : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountProfileDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateAccountProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback logoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback buyOperationCompleted;
        
        private System.Threading.SendOrPostCallback sellOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHoldingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClosedOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getQuoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHoldingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMarketSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTopOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback sellEnhancedOperationCompleted;
        
        private System.Threading.SendOrPostCallback isOnlineOperationCompleted;
        
        /// <remarks/>
        public TradeServiceAsmx() {
            string urlSetting = System.Configuration.ConfigurationManager.AppSettings["EndpointURL"];
            if ((urlSetting != null)) {
                this.Url = urlSetting;
            }
            else {
                this.Url = "http://kesser/TradeServiceWcf/TradeServiceAsmx.asmx";
            }
        }
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event getOrdersCompletedEventHandler getOrdersCompleted;
        
        /// <remarks/>
        public event getAccountDataCompletedEventHandler getAccountDataCompleted;
        
        /// <remarks/>
        public event getAccountProfileDataCompletedEventHandler getAccountProfileDataCompleted;
        
        /// <remarks/>
        public event updateAccountProfileCompletedEventHandler updateAccountProfileCompleted;
        
        /// <remarks/>
        public event logoutCompletedEventHandler logoutCompleted;
        
        /// <remarks/>
        public event buyCompletedEventHandler buyCompleted;
        
        /// <remarks/>
        public event sellCompletedEventHandler sellCompleted;
        
        /// <remarks/>
        public event getHoldingsCompletedEventHandler getHoldingsCompleted;
        
        /// <remarks/>
        public event registerCompletedEventHandler registerCompleted;
        
        /// <remarks/>
        public event getClosedOrdersCompletedEventHandler getClosedOrdersCompleted;
        
        /// <remarks/>
        public event getQuoteCompletedEventHandler getQuoteCompleted;
        
        /// <remarks/>
        public event getHoldingCompletedEventHandler getHoldingCompleted;
        
        /// <remarks/>
        public event getMarketSummaryCompletedEventHandler getMarketSummaryCompleted;
        
        /// <remarks/>
        public event getTopOrdersCompletedEventHandler getTopOrdersCompleted;
        
        /// <remarks/>
        public event sellEnhancedCompletedEventHandler sellEnhancedCompleted;
        
        /// <remarks/>
        public event isOnlineCompletedEventHandler isOnlineCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://trade.samples.websphere.ibm.com", ResponseNamespace="http://trade.samples.websphere.ibm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("loginReturn")]
        public AccountDataBean login(string userID, string password) {
            object[] results = this.Invoke("login", new object[] {
                        userID,
                        password});
            return ((AccountDataBean)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginlogin(string userID, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("login", new object[] {
                        userID,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public AccountDataBean Endlogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AccountDataBean)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string userID, string password) {
            this.loginAsync(userID, password, null);
        }
        
        /// <remarks/>
        public void loginAsync(string userID, string password, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        userID,
                        password}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://trade.samples.websphere.ibm.com", ResponseNamespace="http://trade.samples.websphere.ibm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getOrdersReturn")]
        public OrderDataBean[] getOrders(string userID) {
            object[] results = this.Invoke("getOrders", new object[] {
                        userID});
            return ((OrderDataBean[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetOrders(string userID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getOrders", new object[] {
                        userID}, callback, asyncState);
        }
        
        /// <remarks/>
        public OrderDataBean[] EndgetOrders(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrderDataBean[])(results[0]));
        }
        
        /// <remarks/>
        public void getOrdersAsync(string userID) {
            this.getOrdersAsync(userID, null);
        }
        
        /// <remarks/>
        public void getOrdersAsync(string userID, object userState) {
            if ((this.getOrdersOperationCompleted == null)) {
                this.getOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOrdersOperationCompleted);
            }
            this.InvokeAsync("getOrders", new object[] {
                        userID}, this.getOrdersOperationCompleted, userState);
        }
        
        private void OngetOrdersOperationCompleted(object arg) {
            if ((this.getOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOrdersCompleted(this, new getOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://trade.samples.websphere.ibm.com", ResponseNamespace="http://trade.samples.websphere.ibm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getAccountDataReturn")]
        public AccountDataBean getAccountData(string userID) {
            object[] results = this.Invoke("getAccountData", new object[] {
                        userID});
            return ((AccountDataBean)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAccountData(string userID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAccountData", new object[] {
                        userID}, callback, asyncState);
        }
        
        /// <remarks/>
        public AccountDataBean EndgetAccountData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AccountDataBean)(results[0]));
        }
        
        /// <remarks/>
        public void getAccountDataAsync(string userID) {
            this.getAccountDataAsync(userID, null);
        }
        
        /// <remarks/>
        public void getAccountDataAsync(string userID, object userState) {
            if ((this.getAccountDataOperationCompleted == null)) {
                this.getAccountDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountDataOperationCompleted);
            }
            this.InvokeAsync("getAccountData", new object[] {
                        userID}, this.getAccountDataOperationCompleted, userState);
        }
        
        private void OngetAccountDataOperationCompleted(object arg) {
            if ((this.getAccountDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountDataCompleted(this, new getAccountDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://trade.samples.websphere.ibm.com", ResponseNamespace="http://trade.samples.websphere.ibm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getAccountProfileDataReturn")]
        public AccountProfileDataBean getAccountProfileData(string userID) {
            object[] results = this.Invoke("getAccountProfileData", new object[] {
                        userID});
            return ((AccountProfileDataBean)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAccountProfileData(string userID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAccountProfileData", new object[] {
                        userID}, callback, asyncState);
        }
        
        /// <remarks/>
        public AccountProfileDataBean EndgetAccountProfileData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AccountProfileDataBean)(results[0]));
        }
        
        /// <remarks/>
        public void getAccountProfileDataAsync(string userID) {
            this.getAccountProfileDataAsync(userID, null);
        }
        
        /// <remarks/>
        public void getAccountProfileDataAsync(string userID, object userState) {
            if ((this.getAccountProfileDataOperationCompleted == null)) {
                this.getAccountProfileDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountProfileDataOperationCompleted);
            }
            this.InvokeAsync("getAccountProfileData", new object[] {
                        userID}, this.getAccountProfileDataOperationCompleted, userState);
        }
        
        private void OngetAccountProfileDataOperationCompleted(object arg) {
            if ((this.getAccountProfileDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountProfileDataCompleted(this, new getAccountProfileDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://trade.samples.websphere.ibm.com", ResponseNamespace="http://trade.samples.websphere.ibm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("updateAccountProfileReturn")]
        public AccountProfileDataBean updateAccountProfile(AccountProfileDataBean profileData) {
            object[] results = this.Invoke("updateAccountProfile", new object[] {
                        profileData});
            return ((AccountProfileDataBean)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateAccountProfile(AccountProfileDataBean profileData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateAccountProfile", new object[] {
                        profileData}, callback, asyncState);
        }
        
        /// <remarks/>
        public AccountProfileDataBean EndupdateAccountProfile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AccountProfileDataBean)(results[0]));
        }
        
        /// <remarks/>
        public void updateAccountProfileAsync(AccountProfileDataBean profileData) {
            this.updateAccountProfileAsync(profileData, null);
        }
        
        /// <remarks/>
        public void updateAccountProfileAsync(AccountProfileDataBean profileData, object userState) {
            if ((this.updateAccountProfileOperationCompleted == null)) {
                this.updateAccountProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateAccountProfileOperationCompleted);
            }
            this.InvokeAsync("updateAccountProfile", new object[] {
                        profileData}, this.updateAccountProfileOperationCompleted, userState);
        }
        
        private void OnupdateAccountProfileOperationCompleted(object arg) {
            if ((this.updateAccountProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateAccountProfileCompleted(this, new updateAccountProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://trade.samples.websphere.ibm.com", ResponseNamespace="http://trade.samples.websphere.ibm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void logout(string userID) {
            this.Invoke("logout", new object[] {
                        userID});
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginlogout(string userID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("logout", new object[] {
                        userID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void Endlogout(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void logoutAsync(string userID) {
            this.logoutAsync(userID, null);
        }
        
        /// <remarks/>
        public void logoutAsync(string userID, object userState) {
            if ((this.logoutOperationCompleted == null)) {
                this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
            }
            this.InvokeAsync("logout", new object[] {
                        userID}, this.logoutOperationCompleted, userState);
        }
        
        private void OnlogoutOperationCompleted(object arg) {
            if ((this.logoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://trade.samples.websphere.ibm.com", ResponseNamespace="http://trade.samples.websphere.ibm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("buyReturn")]
        public OrderDataBean buy(string userID, string symbol, double quantity, int orderProcessingMode) {
            object[] results = this.Invoke("buy", new object[] {
                        userID,
                        symbol,
                        quantity,
                        orderProcessingMode});
            return ((OrderDataBean)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginbuy(string userID, string symbol, double quantity, int orderProcessingMode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("buy", new object[] {
                        userID,
                        symbol,
                        quantity,
                        orderProcessingMode}, callback, asyncState);
        }
        
        /// <remarks/>
        public OrderDataBean Endbuy(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrderDataBean)(results[0]));
        }
        
        /// <remarks/>
        public void buyAsync(string userID, string symbol, double quantity, int orderProcessingMode) {
            this.buyAsync(userID, symbol, quantity, orderProcessingMode, null);
        }
        
        /// <remarks/>
        public void buyAsync(string userID, string symbol, double quantity, int orderProcessingMode, object userState) {
            if ((this.buyOperationCompleted == null)) {
                this.buyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbuyOperationCompleted);
            }
            this.InvokeAsync("buy", new object[] {
                        userID,
                        symbol,
                        quantity,
                        orderProcessingMode}, this.buyOperationCompleted, userState);
        }
        
        private void OnbuyOperationCompleted(object arg) {
            if ((this.buyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.buyCompleted(this, new buyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://trade.samples.websphere.ibm.com", ResponseNamespace="http://trade.samples.websphere.ibm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("sellReturn")]
        public OrderDataBean sell(string userID, int holdingID, int orderProcessingMode) {
            object[] results = this.Invoke("sell", new object[] {
                        userID,
                        holdingID,
                        orderProcessingMode});
            return ((OrderDataBean)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginsell(string userID, int holdingID, int orderProcessingMode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("sell", new object[] {
                        userID,
                        holdingID,
                        orderProcessingMode}, callback, asyncState);
        }
        
        /// <remarks/>
        public OrderDataBean Endsell(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrderDataBean)(results[0]));
        }
        
        /// <remarks/>
        public void sellAsync(string userID, int holdingID, int orderProcessingMode) {
            this.sellAsync(userID, holdingID, orderProcessingMode, null);
        }
        
        /// <remarks/>
        public void sellAsync(string userID, int holdingID, int orderProcessingMode, object userState) {
            if ((this.sellOperationCompleted == null)) {
                this.sellOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsellOperationCompleted);
            }
            this.InvokeAsync("sell", new object[] {
                        userID,
                        holdingID,
                        orderProcessingMode}, this.sellOperationCompleted, userState);
        }
        
        private void OnsellOperationCompleted(object arg) {
            if ((this.sellCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sellCompleted(this, new sellCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://trade.samples.websphere.ibm.com", ResponseNamespace="http://trade.samples.websphere.ibm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getHoldingsReturn")]
        public HoldingDataBean[] getHoldings(string userID) {
            object[] results = this.Invoke("getHoldings", new object[] {
                        userID});
            return ((HoldingDataBean[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetHoldings(string userID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getHoldings", new object[] {
                        userID}, callback, asyncState);
        }
        
        /// <remarks/>
        public HoldingDataBean[] EndgetHoldings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HoldingDataBean[])(results[0]));
        }
        
        /// <remarks/>
        public void getHoldingsAsync(string userID) {
            this.getHoldingsAsync(userID, null);
        }
        
        /// <remarks/>
        public void getHoldingsAsync(string userID, object userState) {
            if ((this.getHoldingsOperationCompleted == null)) {
                this.getHoldingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHoldingsOperationCompleted);
            }
            this.InvokeAsync("getHoldings", new object[] {
                        userID}, this.getHoldingsOperationCompleted, userState);
        }
        
        private void OngetHoldingsOperationCompleted(object arg) {
            if ((this.getHoldingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHoldingsCompleted(this, new getHoldingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://trade.samples.websphere.ibm.com", ResponseNamespace="http://trade.samples.websphere.ibm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("registerReturn")]
        public AccountDataBean register(string userID, string password, string fullname, string address, string email, string creditcard, decimal openBalance) {
            object[] results = this.Invoke("register", new object[] {
                        userID,
                        password,
                        fullname,
                        address,
                        email,
                        creditcard,
                        openBalance});
            return ((AccountDataBean)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginregister(string userID, string password, string fullname, string address, string email, string creditcard, decimal openBalance, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("register", new object[] {
                        userID,
                        password,
                        fullname,
                        address,
                        email,
                        creditcard,
                        openBalance}, callback, asyncState);
        }
        
        /// <remarks/>
        public AccountDataBean Endregister(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AccountDataBean)(results[0]));
        }
        
        /// <remarks/>
        public void registerAsync(string userID, string password, string fullname, string address, string email, string creditcard, decimal openBalance) {
            this.registerAsync(userID, password, fullname, address, email, creditcard, openBalance, null);
        }
        
        /// <remarks/>
        public void registerAsync(string userID, string password, string fullname, string address, string email, string creditcard, decimal openBalance, object userState) {
            if ((this.registerOperationCompleted == null)) {
                this.registerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterOperationCompleted);
            }
            this.InvokeAsync("register", new object[] {
                        userID,
                        password,
                        fullname,
                        address,
                        email,
                        creditcard,
                        openBalance}, this.registerOperationCompleted, userState);
        }
        
        private void OnregisterOperationCompleted(object arg) {
            if ((this.registerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerCompleted(this, new registerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://trade.samples.websphere.ibm.com", ResponseNamespace="http://trade.samples.websphere.ibm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getClosedOrdersReturn")]
        public OrderDataBean[] getClosedOrders(string userID) {
            object[] results = this.Invoke("getClosedOrders", new object[] {
                        userID});
            return ((OrderDataBean[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetClosedOrders(string userID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getClosedOrders", new object[] {
                        userID}, callback, asyncState);
        }
        
        /// <remarks/>
        public OrderDataBean[] EndgetClosedOrders(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrderDataBean[])(results[0]));
        }
        
        /// <remarks/>
        public void getClosedOrdersAsync(string userID) {
            this.getClosedOrdersAsync(userID, null);
        }
        
        /// <remarks/>
        public void getClosedOrdersAsync(string userID, object userState) {
            if ((this.getClosedOrdersOperationCompleted == null)) {
                this.getClosedOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClosedOrdersOperationCompleted);
            }
            this.InvokeAsync("getClosedOrders", new object[] {
                        userID}, this.getClosedOrdersOperationCompleted, userState);
        }
        
        private void OngetClosedOrdersOperationCompleted(object arg) {
            if ((this.getClosedOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClosedOrdersCompleted(this, new getClosedOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://trade.samples.websphere.ibm.com", ResponseNamespace="http://trade.samples.websphere.ibm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getQuoteReturn")]
        public QuoteDataBean getQuote(string symbol) {
            object[] results = this.Invoke("getQuote", new object[] {
                        symbol});
            return ((QuoteDataBean)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetQuote(string symbol, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getQuote", new object[] {
                        symbol}, callback, asyncState);
        }
        
        /// <remarks/>
        public QuoteDataBean EndgetQuote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((QuoteDataBean)(results[0]));
        }
        
        /// <remarks/>
        public void getQuoteAsync(string symbol) {
            this.getQuoteAsync(symbol, null);
        }
        
        /// <remarks/>
        public void getQuoteAsync(string symbol, object userState) {
            if ((this.getQuoteOperationCompleted == null)) {
                this.getQuoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQuoteOperationCompleted);
            }
            this.InvokeAsync("getQuote", new object[] {
                        symbol}, this.getQuoteOperationCompleted, userState);
        }
        
        private void OngetQuoteOperationCompleted(object arg) {
            if ((this.getQuoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQuoteCompleted(this, new getQuoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://trade.samples.websphere.ibm.com", ResponseNamespace="http://trade.samples.websphere.ibm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getHoldingReturn")]
        public HoldingDataBean getHolding(string userID, int holdingID) {
            object[] results = this.Invoke("getHolding", new object[] {
                        userID,
                        holdingID});
            return ((HoldingDataBean)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetHolding(string userID, int holdingID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getHolding", new object[] {
                        userID,
                        holdingID}, callback, asyncState);
        }
        
        /// <remarks/>
        public HoldingDataBean EndgetHolding(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HoldingDataBean)(results[0]));
        }
        
        /// <remarks/>
        public void getHoldingAsync(string userID, int holdingID) {
            this.getHoldingAsync(userID, holdingID, null);
        }
        
        /// <remarks/>
        public void getHoldingAsync(string userID, int holdingID, object userState) {
            if ((this.getHoldingOperationCompleted == null)) {
                this.getHoldingOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHoldingOperationCompleted);
            }
            this.InvokeAsync("getHolding", new object[] {
                        userID,
                        holdingID}, this.getHoldingOperationCompleted, userState);
        }
        
        private void OngetHoldingOperationCompleted(object arg) {
            if ((this.getHoldingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHoldingCompleted(this, new getHoldingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://trade.samples.websphere.ibm.com", ResponseNamespace="http://trade.samples.websphere.ibm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getMarketSummaryReturn")]
        public MarketSummaryDataBeanWS getMarketSummary() {
            object[] results = this.Invoke("getMarketSummary", new object[0]);
            return ((MarketSummaryDataBeanWS)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetMarketSummary(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getMarketSummary", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public MarketSummaryDataBeanWS EndgetMarketSummary(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MarketSummaryDataBeanWS)(results[0]));
        }
        
        /// <remarks/>
        public void getMarketSummaryAsync() {
            this.getMarketSummaryAsync(null);
        }
        
        /// <remarks/>
        public void getMarketSummaryAsync(object userState) {
            if ((this.getMarketSummaryOperationCompleted == null)) {
                this.getMarketSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMarketSummaryOperationCompleted);
            }
            this.InvokeAsync("getMarketSummary", new object[0], this.getMarketSummaryOperationCompleted, userState);
        }
        
        private void OngetMarketSummaryOperationCompleted(object arg) {
            if ((this.getMarketSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMarketSummaryCompleted(this, new getMarketSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://trade.samples.websphere.ibm.com", ResponseNamespace="http://trade.samples.websphere.ibm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getTopOrdersReturn")]
        public OrderDataBean[] getTopOrders(string userID) {
            object[] results = this.Invoke("getTopOrders", new object[] {
                        userID});
            return ((OrderDataBean[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTopOrders(string userID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTopOrders", new object[] {
                        userID}, callback, asyncState);
        }
        
        /// <remarks/>
        public OrderDataBean[] EndgetTopOrders(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrderDataBean[])(results[0]));
        }
        
        /// <remarks/>
        public void getTopOrdersAsync(string userID) {
            this.getTopOrdersAsync(userID, null);
        }
        
        /// <remarks/>
        public void getTopOrdersAsync(string userID, object userState) {
            if ((this.getTopOrdersOperationCompleted == null)) {
                this.getTopOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTopOrdersOperationCompleted);
            }
            this.InvokeAsync("getTopOrders", new object[] {
                        userID}, this.getTopOrdersOperationCompleted, userState);
        }
        
        private void OngetTopOrdersOperationCompleted(object arg) {
            if ((this.getTopOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTopOrdersCompleted(this, new getTopOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://trade.samples.websphere.ibm.com", ResponseNamespace="http://trade.samples.websphere.ibm.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("sellEnhancedReturn")]
        public OrderDataBean sellEnhanced(string userID, int holdingID, double quantity) {
            object[] results = this.Invoke("sellEnhanced", new object[] {
                        userID,
                        holdingID,
                        quantity});
            return ((OrderDataBean)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsellEnhanced(string userID, int holdingID, double quantity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("sellEnhanced", new object[] {
                        userID,
                        holdingID,
                        quantity}, callback, asyncState);
        }
        
        /// <remarks/>
        public OrderDataBean EndsellEnhanced(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrderDataBean)(results[0]));
        }
        
        /// <remarks/>
        public void sellEnhancedAsync(string userID, int holdingID, double quantity) {
            this.sellEnhancedAsync(userID, holdingID, quantity, null);
        }
        
        /// <remarks/>
        public void sellEnhancedAsync(string userID, int holdingID, double quantity, object userState) {
            if ((this.sellEnhancedOperationCompleted == null)) {
                this.sellEnhancedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsellEnhancedOperationCompleted);
            }
            this.InvokeAsync("sellEnhanced", new object[] {
                        userID,
                        holdingID,
                        quantity}, this.sellEnhancedOperationCompleted, userState);
        }
        
        private void OnsellEnhancedOperationCompleted(object arg) {
            if ((this.sellEnhancedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sellEnhancedCompleted(this, new sellEnhancedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://trade.samples.websphere.ibm.com", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void isOnline() {
            this.Invoke("isOnline", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginisOnline(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("isOnline", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndisOnline(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void isOnlineAsync() {
            this.isOnlineAsync(null);
        }
        
        /// <remarks/>
        public void isOnlineAsync(object userState) {
            if ((this.isOnlineOperationCompleted == null)) {
                this.isOnlineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisOnlineOperationCompleted);
            }
            this.InvokeAsync("isOnline", new object[0], this.isOnlineOperationCompleted, userState);
        }
        
        private void OnisOnlineOperationCompleted(object arg) {
            if ((this.isOnlineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isOnlineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trade.samples.websphere.ibm.com")]
    public partial class AccountDataBean {
        
        /// <remarks/>
        public int accountID;
        
        /// <remarks/>
        public int loginCount;
        
        /// <remarks/>
        public int logoutCount;
        
        /// <remarks/>
        public System.DateTime lastLogin;
        
        /// <remarks/>
        public System.DateTime creationDate;
        
        /// <remarks/>
        public decimal balance;
        
        /// <remarks/>
        public decimal openBalance;
        
        /// <remarks/>
        public string profileID;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trade.samples.websphere.ibm.com")]
    public partial class MarketSummaryDataBeanWS {
        
        /// <remarks/>
        public decimal TSIA;
        
        /// <remarks/>
        public decimal openTSIA;
        
        /// <remarks/>
        public double volume;
        
        /// <remarks/>
        public QuoteDataBean[] topGainers;
        
        /// <remarks/>
        public QuoteDataBean[] topLosers;
        
        /// <remarks/>
        public System.DateTime summaryDate;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trade.samples.websphere.ibm.com")]
    public partial class QuoteDataBean {
        
        /// <remarks/>
        public string symbol;
        
        /// <remarks/>
        public string companyName;
        
        /// <remarks/>
        public decimal price;
        
        /// <remarks/>
        public decimal open;
        
        /// <remarks/>
        public decimal low;
        
        /// <remarks/>
        public decimal high;
        
        /// <remarks/>
        public double change;
        
        /// <remarks/>
        public double volume;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trade.samples.websphere.ibm.com")]
    public partial class HoldingDataBean {
        
        /// <remarks/>
        public int holdingID;
        
        /// <remarks/>
        public double quantity;
        
        /// <remarks/>
        public decimal purchasePrice;
        
        /// <remarks/>
        public System.DateTime purchaseDate;
        
        /// <remarks/>
        public string quoteID;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trade.samples.websphere.ibm.com")]
    public partial class AccountProfileDataBean {
        
        /// <remarks/>
        public string userID;
        
        /// <remarks/>
        public string password;
        
        /// <remarks/>
        public string fullName;
        
        /// <remarks/>
        public string address;
        
        /// <remarks/>
        public string email;
        
        /// <remarks/>
        public string creditCard;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trade.samples.websphere.ibm.com")]
    public partial class OrderDataBean {
        
        /// <remarks/>
        public int orderID;
        
        /// <remarks/>
        public string orderType;
        
        /// <remarks/>
        public string orderStatus;
        
        /// <remarks/>
        public System.DateTime openDate;
        
        /// <remarks/>
        public System.DateTime completionDate;
        
        /// <remarks/>
        public double quantity;
        
        /// <remarks/>
        public decimal price;
        
        /// <remarks/>
        public decimal orderFee;
        
        /// <remarks/>
        public string symbol;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountDataBean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountDataBean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getOrdersCompletedEventHandler(object sender, getOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderDataBean[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderDataBean[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getAccountDataCompletedEventHandler(object sender, getAccountDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountDataBean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountDataBean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getAccountProfileDataCompletedEventHandler(object sender, getAccountProfileDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountProfileDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountProfileDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountProfileDataBean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountProfileDataBean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void updateAccountProfileCompletedEventHandler(object sender, updateAccountProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateAccountProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateAccountProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountProfileDataBean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountProfileDataBean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void logoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void buyCompletedEventHandler(object sender, buyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class buyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal buyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderDataBean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderDataBean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void sellCompletedEventHandler(object sender, sellCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sellCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sellCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderDataBean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderDataBean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getHoldingsCompletedEventHandler(object sender, getHoldingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHoldingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHoldingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HoldingDataBean[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HoldingDataBean[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void registerCompletedEventHandler(object sender, registerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountDataBean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountDataBean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getClosedOrdersCompletedEventHandler(object sender, getClosedOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClosedOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClosedOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderDataBean[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderDataBean[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getQuoteCompletedEventHandler(object sender, getQuoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQuoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQuoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuoteDataBean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuoteDataBean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getHoldingCompletedEventHandler(object sender, getHoldingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHoldingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHoldingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HoldingDataBean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HoldingDataBean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getMarketSummaryCompletedEventHandler(object sender, getMarketSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMarketSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMarketSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MarketSummaryDataBeanWS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MarketSummaryDataBeanWS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getTopOrdersCompletedEventHandler(object sender, getTopOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTopOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTopOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderDataBean[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderDataBean[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void sellEnhancedCompletedEventHandler(object sender, sellEnhancedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sellEnhancedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sellEnhancedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderDataBean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderDataBean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void isOnlineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
